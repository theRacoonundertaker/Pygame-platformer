import pygame
import random
from winsound import Beep
pygame.init()  
pygame.display.set_caption("easy platformer")  # sets the window title
screen = pygame.display.set_mode((800, 800))  # creates game screen
screen.fill((0,0,0))
clock = pygame.time.Clock() #set up clock
gameover = False #variable to run our game loop

#CONSTANTS
LEFT=0
RIGHT=1
UP = 2
DOWN = 3

#CONSTANTS 2
a=0
d=1
w = 2
s = 3


#player variables
xpos = 500 #xpos of player
ypos = 200 #ypos of player
vx = 0 #x velocity of player
vy = 0 #y velocity of player
keys = [False, False, False, False] #this list holds whether each key has been pressed
isOnGround = False #this variable stops gravity from pulling you down more when on a platform

#player variables
xpos2 = 500 #xpos of player
ypos2 = 200 #ypos of player
vx2 = 0 #x velocity of player
vy2 = 0 #y velocity of player
keys2 = [False, False, False, False]
isOnGround2 = False #this variable stops gravity from pulling you down more when on a platform


while not gameover: #GAME LOOP############################################################
    clock.tick(60) #FPS
   
    #Input Section------------------------------------------------------------
    for event in pygame.event.get(): #quit game if x is pressed in top corner
        if event.type == pygame.QUIT:
            gameover = True
     
        if event.type == pygame.KEYDOWN: #check for key pressed
            if event.key == pygame.K_LEFT:
                keys[LEFT]=True
               
            if event.key == pygame.K_RIGHT:
                keys[RIGHT]=True
               
            if event.key == pygame.K_UP:
                keys[UP]=True
               
            if event.key == pygame.K_a:
                keys2[a]=True
           
            if event.key == pygame.K_d:
                keys2[d]=True
               
            if event.key == pygame.K_w:
                keys2[w]=True
               
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                keys[LEFT]=False
               
            if event.key == pygame.K_RIGHT:
                keys[RIGHT]=False
               
            if event.key == pygame.K_UP:
                keys[UP]=False
                   
            if event.key == pygame.K_a:
                keys2[a]=False
           
            if event.key == pygame.K_d:
                keys2[d]=False
               
            if event.key == pygame.K_w:
                keys2[w]=False
               
           
               
     
           

         
    #physics section--------------------------------------------------------------------
    #LEFT MOVEMENT
               
    #p1 update
    if keys[LEFT]==True:
        vx=-5
       
    elif keys[RIGHT]==True:
        vx=+5
    else:
        vx = 0
     
    #p2 update
    if keys2[a]==True:
        vx2=-5
       
    elif keys2[d]==True:
        vx2=+5
       
    #turn off velocity
    else:
        vx2 = 0

       
       
        #JUMPING
    if keys[UP] == True and isOnGround == True: #only jump when on the ground
        vy = -15
        isOnGround = False
        Beep(500, 50)
       
    if keys2[w] == True and isOnGround2 == True: #only jump when on the ground
        vy2 = -15
        isOnGround2 = False
        Beep(700, 50)
     
       
   
       
   
   

   
    #COLLISION
    if xpos>100 and xpos<200 and ypos+40 >750 and ypos+40 <770:
        ypos = 750-40
        isOnGround = True
        vy = 0
    elif xpos>200 and xpos<300 and ypos+40 >650 and ypos+40 <670:
        ypos = 650-40
        isOnGround = True
        vy = 0
    elif xpos>400 and xpos<500 and ypos+40 >550 and ypos+40 <570:
        ypos = 550-40
        isOnGround = True
        vy = 0
    elif xpos>300 and xpos<400 and ypos+40 >450 and ypos+40 <470:
        ypos = 450-40
        isOnGround = True
        vy = 0
    elif xpos>350 and xpos<450 and ypos+40 >250 and ypos+40 <270:
        ypos = 250-40
        isOnGround = True
        vy = 0
    elif xpos>100 and xpos<200 and ypos+40 >200 and ypos+40 <220:
        ypos = 200-40
        isOnGround = True
        vy = 0
    elif xpos>150 and xpos<250 and ypos+40 >350 and ypos+40 <370:
        ypos = 350-40
        isOnGround = True
        vy = 0
    else:
        isOnGround = False
# Player 2 collision-------------------------------------------
    if xpos2>100 and xpos2<200 and ypos2+40 >750 and ypos2+40 <770:
        ypos2 = 750-40
        isOnGround2 = True
        vy2 = 0
    elif xpos2>200 and xpos2<300 and ypos2+40 >650 and ypos2+40 <670:
        ypos2 = 650-40
        isOnGround2 = True
        vy2 = 0
    elif xpos2>400 and xpos2<500 and ypos2+40 >550 and ypos2+40 <570:
        ypos2 = 550-40
        isOnGround2 = True
        vy2 = 0
    elif xpos2>300 and xpos2<400 and ypos2+40 >450 and ypos2+40 <470:
        ypos2 = 450-40
        isOnGround2 = True
        vy2 = 0
    elif xpos2>350 and xpos2<450 and ypos2+40 >250 and ypos2+40 <270:
        ypos2 = 250-40
        isOnGround2 = True
        vy2 = 0
    elif xpos2>100 and xpos2<200 and ypos2+40 >200 and ypos2+40 <220:
        ypos2 = 200-40
        isOnGround2 = True
        vy2 = 0
    elif xpos2>150 and xpos2<250 and ypos2+40 >350 and ypos2+40 <370:
        ypos2 = 350-40
        isOnGround2 = True
        vy2 = 0
    else:
        isOnGround2 = False


   
    #stop falling if on bottom of game screen
    if ypos > 760:
        isOnGround = True
        vy = 0
        ypos = 760
       
    if ypos2 > 760:
        isOnGround2 = True
        vy2 = 0
        ypos2 = 760
   
    #gravity
    if isOnGround == False:
        vy+=.4 #notice this grows over time, aka ACCELERATION
       
    if isOnGround2 == False:
        vy2+=.4 #notice this grows over time, aka ACCELERATION
   

    #update player position
    xpos+=vx
    ypos+=vy
   
    xpos2+=vx2
    ypos2+=vy2
   
 
    # RENDER Section--------------------------------------------------------------------------------
           
    screen.fill((0,0,0)) #wipe screen so it doesn't smear #lol mo messed with your code
 
    pygame.draw.rect(screen, (random.randrange(0, 255), random.randrange(0, 255), random.randrange(0, 255)), (xpos, ypos, 20, 40))
   
    pygame.draw.rect(screen, (100,100,200) , (xpos2, ypos2, 20, 40))
   
    #first platform
    pygame.draw.rect(screen, (200, 0, 100), (100, 750, 100, 20))
   
    #second platform
    pygame.draw.rect(screen, (100, 0, 200), (200, 650, 100, 20))
   
    #third platform
    pygame.draw.rect(screen, (100, 0, 200), (400, 550, 100, 20))
   
    #fourth platform
    pygame.draw.rect(screen, (100, 230, 200), (300, 450, 100, 20))
   
    #fifth platform
    pygame.draw.rect(screen, (100, 0, 200), (350, 250, 100, 20))
   
    #sixth platform
    pygame.draw.rect(screen, (100, 0, 200), (100, 200, 100, 20))
   
   
    #seventh platform
    pygame.draw.rect(screen, (200, 100, 200), (150, 350, 100, 20))
   
    pygame.display.flip()#this actually puts the pixel on the screen
   
#end game loop------------------------------------------------------------------------------
pygame.quit()
